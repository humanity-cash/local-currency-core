---
swagger: "2.0"
info:
  description: Interface to expose customer blockchain local currency balances and perform user management, payments, and reporting.
  version: 1.0.1
  title: Local Currency API
  contact:
    email: aaron@humanity.cash
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /Humanity.Cash/local-currency/1.0.1
tags:
- name: Authorized to Owner
  description: Secured authorized-only operations that update the chain state
- name: Dwolla
  description: |
    Endpoints called by Dwolla webhook subscription
    Authorized by X-Request-Signature-SHA-256 header
- name: Public
  description: Read only requests available to the public
schemes:
- https
paths:
  /businesses:
    get:
      tags:
      - Authorized to Owner
      summary: List of all verified businesses
      operationId: businesses
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IBusinessResponse'
        "500":
          description: Server Error
  /health:
    get:
      tags:
      - Authorized to Owner
      summary: Endpoint and health information
      operationId: health
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IHealthResponse'
        "500":
          description: Server Error
  /stats/deposit:
    get:
      tags:
      - Public
      summary: Get all deposits
      operationId: getAllDeposits
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IDepositResponse'
        "500":
          description: Server Error
  /stats/withdrawal:
    get:
      tags:
      - Public
      summary: Get all withdrawal
      operationId: getAllWithdrawals
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IWithdrawalResponse'
        "500":
          description: Server Error
  /stats/transfer:
    get:
      tags:
      - Public
      summary: Get all transfers
      operationId: getAllTransfers
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ITransferEventResponse'
        "500":
          description: Server Error
  /stats/operator:
    get:
      tags:
      - Public
      summary: Get all operator statistics
      operationId: getOperatorStatistics
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IOperatorTotalResponse'
        "500":
          description: Server Error
  /users:
    get:
      tags:
      - Public
      summary: Retrieve user information and balances
      description: |
        Get parsed user details from the blockchain
      operationId: getAllUser
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IWalletResponse'
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Server Error
    post:
      tags:
      - Authorized to Owner
      summary: Creates a new local currency user
      description: Adds an new user to the system
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: newWallet
        description: New user to add
        required: false
        schema:
          $ref: '#/definitions/IWalletRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/IWalletResponse'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "422":
          description: Unprocessable
        "500":
          description: Server Error
  /users/:id:
    get:
      tags:
      - Public
      summary: Retrieve user information and balances
      description: |
        Get parsed user details from the blockchain
      operationId: getUser
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IWalletResponse'
        "400":
          description: Bad Request
        "404":
          description: User not found
        "500":
          description: Server Error
  /users/:id/deposit:
    get:
      tags:
      - Public
      summary: Get all deposits for a single user
      description: |
        Get deposits (minting) from the blockchain
      operationId: getDeposits
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IDepositResponse'
        "404":
          description: Not Found
        "500":
          description: Server Error
    post:
      tags:
      - Authorized to Owner
      summary: Create a deposit record and mint local currency token
      description: |
        Create a deposit record and mint local currency token
      operationId: createDeposit
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: createDeposit
        description: Create a deposit
        required: false
        schema:
          $ref: '#/definitions/IDepositRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "422":
          description: Unprocessable
        "500":
          description: Server Error
  /users/:id/withdraw:
    get:
      tags:
      - Public
      summary: Get all withdrawals for a single user
      description: |
        Get withdrawals (burning) from the blockchain
      operationId: getWithdrawals
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IWithdrawalResponse'
        "404":
          description: Not Found
        "500":
          description: Server Error
    post:
      tags:
      - Authorized to Owner
      summary: Create a withdrawal record and burn local currency token
      description: |
        Create a withdrawal record and burn local currency token
      operationId: createWithdrawal
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: createWithdrawal
        description: Create a withdrawal
        required: false
        schema:
          $ref: '#/definitions/IWithdrawalRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "422":
          description: Unprocessable
        "500":
          description: Server Error
  /users/:id/notifications:
    get:
      tags:
      - Authorized to Owner
      summary: Retrieve notifications for a user
      description: |
        Get notifications for a user
      operationId: getNotifications
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IAppNotification'
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server Error
  /users/:id/notifications/:notificationId:
    delete:
      tags:
      - Authorized to Owner
      summary: Close a notification for a user
      description: |
        Close notifications for a user
      operationId: closeNotifications
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IAppNotificationClosed'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: User Not Found
        "500":
          description: Server Error
  /users/:id/iav-token:
    post:
      tags:
      - Authorized to Owner
      summary: Retrieve a new Dwolla IAV token for a user
      description: |
        Get a new Dwolla IAV token for a user
      operationId: getIAVToken
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            example:
              iavToken: 980980df23090980adfffe
        "404":
          description: Not Found
        "500":
          description: Server Error
  /users/:id/funding-sources:
    get:
      tags:
      - Authorized to Owner
      summary: Retrieves funding sources for a user
      description: |
        Get a new Dwolla funding sources for a user
      operationId: getFundingSources
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IDwollaFundingSourceResponse'
        "404":
          description: Not Found
        "500":
          description: Server Error
  /users/:id/transfer:
    get:
      tags:
      - Public
      summary: Retrieve transactions for a user
      description: |
        Get local currency transactions from the blockchain. |
        Optionally provide an userId for transactions for a single user.
      operationId: getTransactions
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ITransferEventResponse'
        "404":
          description: Not Found
        "500":
          description: Server Error
    post:
      tags:
      - Authorized to Owner
      summary: Create transaction
      description: Create a payment transaction between a userId and targetAddress
      operationId: createTransaction
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransactionRequest
        description: Transaction request details
        required: false
        schema:
          $ref: '#/definitions/ITransferRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "422":
          description: Unprocessable
        "500":
          description: Server Error
  /webhook:
    post:
      tags:
      - Dwolla
      summary: Receive webhooks from Dwolla
      description: Consume webhook event notifications from Dwolla
      operationId: webhook
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DwollaEvent
        description: Dwolla Event object
        required: false
        schema:
          $ref: '#/definitions/IDwollaEventRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "422":
          description: Unprocessable
        "500":
          description: Server Error
  /admin/pause:
    post:
      tags:
      - Authorized to Owner
      summary: Pause the contract suite
      description: Pause the contract suite
      operationId: pause
      produces:
      - application/json
      parameters: []
      responses:
        "202":
          description: Accepted
        "403":
          description: Forbidden
        "500":
          description: Server Error
  /admin/unpause:
    post:
      tags:
      - Authorized to Owner
      summary: Unpause the contract suite
      description: Unpause the contract suite
      operationId: unpause
      produces:
      - application/json
      parameters: []
      responses:
        "202":
          description: Accepted
        "403":
          description: Forbidden
        "500":
          description: Server Error
  /admin/transfer/controller:
    post:
      tags:
      - Authorized to Owner
      summary: Transfer ownership of the controller
      description: Transfer ownership of the controller
      operationId: transferControllerOwner
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ITransferOwnerRequest
        description: Change owner details
        required: false
        schema:
          $ref: '#/definitions/ITransferOwnerRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "422":
          description: Unprocessable
        "500":
          description: Server Error
  /admin/transfer/user:
    post:
      tags:
      - Authorized to Owner
      summary: Transfer ownership of a user to another address
      description: Transfer ownership of a wallet
      operationId: transferWalletOwner
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ITransferWalletRequest
        description: Change owner details
        required: false
        schema:
          $ref: '#/definitions/ITransferOwnerRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "422":
          description: Unprocessable
        "500":
          description: Server Error
definitions:
  IBusinessResponse:
    type: object
    required:
    - address1
    - avatar
    - city
    - industry
    - owner
    - postalCode
    - rbn
    - state
    - story
    - tag
    properties:
      website:
        type: string
        example: https://jaredsjumpropes.com
      story:
        type: string
        example: Best skipping ropes in the east!
      tag:
        type: string
        example: jaredsjumpropes
      avatar:
        type: string
        example: https://linkedin.com/in/jaredjumpropes/profile.jpg
      atype:
        type: string
        example: Leisure
      walletAddress:
        type: string
        example: 0x000000012312312313123123
      rbn:
        type: string
        example: 102983-dsfj
      industry:
        type: string
        example: Health
      ein:
        type: string
        example: 12324-324234
      ssn:
        type: string
        example: "234234"
      address1:
        type: string
        example: 1 Main Street
      address:
        type: string
        example: South
      city:
        type: string
        example: Egremont
      state:
        type: string
        example: MA
      postalCode:
        type: string
        example: "10111"
      phoneNumber:
        type: string
        example: 555-4326
      dwollaId:
        type: string
        example: 212312-slkffddads-3420942
      resourceUri:
        type: string
        example: https://url.com
      owner:
        type: object
        example:
          firstName: Sample
          lastName: Owner
          address1: 2 Main Street
          address2: ""
          city: Great Barrington
          state: MA
          postalCode: "902190"
        properties: {}
  IDwollaLinks:
    type: object
    required:
    - account
    - resource
    - self
    properties:
      self:
        type: object
        example:
          href: https://api.dwolla.com/events/f8e70f48-b7ff-47d0-9d3d-62a099363a76
        properties: {}
      resource:
        type: object
        example:
          href: https://api.dwolla.com/transfers/48CFDDB4-1E74-E511-80DB-0AA34A9B2388
        properties: {}
      account:
        type: object
        example:
          href: https://api.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b
        properties: {}
  IDwollaFundingLinks:
    type: object
    example: '{ "transfer-from-balance": { "href": "https://api-sandbox.dwolla.com/transfers", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "transfer" }, "on-demand-authorization": { "href": "https://api-sandbox.dwolla.com/on-demand-authorizations/115dfbf9-8a1b-ec11-8138-fd945f81a1fa", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "on-demand-authorization" }, "self": { "href": "https://api-sandbox.dwolla.com/funding-sources/e11cd1de-bcd0-4265-8053-78c3d48fac3f", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "funding-source" }, "transfer-to-balance": { "href": "https://api-sandbox.dwolla.com/transfers", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "transfer" }, "balance": { "href": "https://api-sandbox.dwolla.com/funding-sources/e11cd1de-bcd0-4265-8053-78c3d48fac3f/balance", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "balance" }, "transfer-send": { "href": "https://api-sandbox.dwolla.com/transfers", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "transfer" }, "remove": { "href": "https://api-sandbox.dwolla.com/funding-sources/e11cd1de-bcd0-4265-8053-78c3d48fac3f", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "funding-source" }, "customer": { "href": "https://api-sandbox.dwolla.com/customers/460852fc-c986-4d2d-aedb-e71d9e5aad37", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "customer" }, "transfer-receive": { "href": "https://api-sandbox.dwolla.com/transfers", "type": "application/vnd.dwolla.v1.hal+json", "resource-type": "transfer" } }'
  IDwollaEventRequest:
    type: object
    required:
    - _links
    - created
    - id
    - resourceId
    - topic
    properties:
      _links:
        $ref: '#/definitions/IDwollaLinks'
      id:
        type: string
        example: f8e70f48-b7ff-47d0-9d3d-62a099363a76
      created:
        type: string
        example: 2015-10-16T15:58:15.000Z
      topic:
        type: string
        example: transfer_created
      resourceId:
        type: string
        example: 48CFDDB4-1E74-E511-80DB-0AA34A9B2388
  IDwollaCustomerBody:
    type: object
    required:
    - _links
    - correlationId
    - created
    - email
    - firstName
    - id
    - lastName
    - status
    - type
    properties:
      _links:
        $ref: '#/definitions/IDwollaLinks'
      id:
        type: string
        example: ecc3a466-f4c6-4470-aa74-a83060bdebf3
      firstName:
        type: string
        example: Irma
      lastName:
        type: string
        example: Green
      email:
        type: string
        example: irma@mail.com
      type:
        type: string
        example: unverified
      status:
        type: string
        example: unverified
      created:
        type: string
        example: 2021-09-27T13:31:33.693Z
      correlationId:
        type: string
        example: p_0x7d78730aeb44f5a04a2b299f56d9e3ff473365a843c794c68de9279b3e667d8f
  IDwollaCustomerResponse:
    type: object
    required:
    - body
    - headers
    - status
    properties:
      headers:
        type: object
        example: {}
        properties: {}
      status:
        type: number
        example: 200.0
      body:
        $ref: '#/definitions/IDwollaCustomerBody'
  IDwollaFundingSource:
    type: object
    required:
    - _links
    - bankAccountType
    - bankName
    - channels
    - created
    - fingerprint
    - iavAccountHolders
    - name
    - removed
    - status
    - type
    properties:
      _links:
        $ref: '#/definitions/IDwollaFundingLinks'
      status:
        type: string
        example: verified
      type:
        type: string
        example: bank
      bankAccountType:
        type: string
        example: savings
      name:
        type: string
        example: 'Your Account #2 - SAVINGS'
      created:
        type: string
        example: 2021-09-22T09:53:43.214Z
      removed:
        type: boolean
        example: false
      channels:
        type: array
        items:
          example: ach
      bankName:
        type: string
        example: SANDBOX TEST BANK
      iavAccountHolders:
        type: object
        example: '{"selected":"account holder"}'
        properties: {}
      fingerprint:
        type: string
        example: 8f90f6ed1be72fac980d0249e92cf5f78b22e9e8f56873b098169b37fc3bd9d5
  IDwollaFundingSourceBody:
    type: object
    required:
    - _embedded
    - _links
    properties:
      _links:
        $ref: '#/definitions/IDwollaLinks'
      _embedded:
        $ref: '#/definitions/IDwollaFundingSourceBody__embedded'
  IDwollaFundingSourceResponse:
    type: object
    required:
    - body
    - headers
    - status
    properties:
      headers:
        type: object
        example: {}
        properties: {}
      status:
        type: number
        example: 200.0
      body:
        $ref: '#/definitions/IDwollaFundingSourceBody'
  IWalletRequest:
    type: object
    required:
    - address1
    - city
    - email
    - firstName
    - lastName
    - postalCode
    - state
    - userId
    properties:
      userId:
        type: string
        example: pcd88fba9-277b-4cc2-a99e-7a9f0926acd5
      firstName:
        type: string
        example: Florian
      lastName:
        type: string
        example: Schneider
      email:
        type: string
        example: schneidf@gmx.de
      address1:
        type: string
        example: Muellerstrasse 123
      address2:
        type: string
        example: ""
      city:
        type: string
        example: Great Barrington
      state:
        type: string
        example: MA
      postalCode:
        type: string
        example: "90210"
  IWalletResponse:
    type: object
    required:
    - address
    - balance
    - createdBlock
    - userId
    properties:
      userId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      address:
        type: string
        example: 0x0000000000000000000000000000000000000001
      balance:
        type: number
        example: 191.45
      createdBlock:
        type: string
        example: "1322324355"
      createdTimestamp:
        type: string
        example: "16654541337"
      customer:
        $ref: '#/definitions/IDwollaCustomerResponse'
  ITransferRequest:
    type: object
    required:
    - amount
    - toUserId
    properties:
      toUserId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      amount:
        type: number
        example: 123.45
      round-up-amount:
        type: number
        example: 2.57
      comment:
        type: string
        example: Buffalo Bill's Fine Leather Goods
  ITransferEventResponse:
    type: object
    required:
    - blockNumber
    - fromAddress
    - fromUserId
    - timestamp
    - toAddress
    - toUserId
    - transactionHash
    - value
    properties:
      transactionHash:
        type: string
        example: 0xcd88fba9277b4cc2a99e7a9f0926acd50909bbbde
      blockNumber:
        type: number
        example: 9.81092832E8
      timestamp:
        type: string
        example: "1654546760"
      fromUserId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      fromAddress:
        type: string
        example: 0x000000000000000000000000000000000000001
      toUserId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      toAddress:
        type: string
        example: 0x000000000000000000000000000000000000001
      value:
        type: string
        example: "123.45"
  IWithdrawalResponse:
    type: object
    required:
    - blockNumber
    - operator
    - timestamp
    - transactionHash
    - userId
    - value
    properties:
      transactionHash:
        type: string
        example: 0xcd88fba9277b4cc2a99e7a9f0926acd50909bbbde
      blockNumber:
        type: number
        example: 9.81092832E8
      timestamp:
        type: string
        example: "1654546760"
      userId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      value:
        type: string
        example: "123.45"
      operator:
        type: string
        example: d19c5dc5-3e45-4a9f-8c01-74003dfa8c71
  IWithdrawalRequest:
    type: object
    required:
    - amount
    properties:
      amount:
        type: string
        example: "1000"
  IDepositResponse:
    type: object
    required:
    - blockNumber
    - operator
    - timestamp
    - transactionHash
    - userId
    - value
    properties:
      transactionHash:
        type: string
        example: 0xcd88fba9277b4cc2a99e7a9f0926acd50909bbbde
      blockNumber:
        type: number
        example: 9.81092832E8
      timestamp:
        type: string
        example: "1654546760"
      userId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      value:
        type: string
        example: "123.45"
      operator:
        type: string
        example: d19c5dc5-3e45-4a9f-8c01-74003dfa8c71
  IDepositRequest:
    type: object
    required:
    - amount
    properties:
      amount:
        type: string
        example: "1000"
  IOperatorTotalResponse:
    type: object
    required:
    - currentOutstanding
    - deposits
    - operator
    - totalDeposits
    - totalWithdrawals
    - withdrawals
    properties:
      operator:
        type: string
        example: d19c5dc5-3e45-4a9f-8c01-74003dfa8c71
      totalDeposits:
        type: string
        example: "123.45"
      totalWithdrawals:
        type: string
        example: "23.45"
      currentOutstanding:
        type: string
        example: "100.00"
      deposits:
        type: array
        items:
          $ref: '#/definitions/IDepositResponse'
      withdrawals:
        type: array
        items:
          $ref: '#/definitions/IWithdrawalResponse'
  ITransferOwnerRequest:
    type: object
    required:
    - newOwner
    properties:
      newOwner:
        type: string
        example: 0x0000000000000000000000000000000000000001
      userId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
  IHealthResponse:
    type: object
    required:
    - blockNumber
    - chainId
    - countOfUsers
    - localCurrencyToken
    - nodeInfo
    properties:
      blockNumber:
        type: number
        example: 1.45689901E8
      chainId:
        type: number
        example: 1337.0
      nodeInfo:
        type: string
        example: EthereumJS TestRPC/v2.7.0/ethereum-js
      localCurrencyToken:
        type: string
        example: 0x8552545cE2CE5cFDE1500A0C2421E21A68b643b7
      countOfUsers:
        type: string
        example: "537"
  IAppNotification:
    type: object
    required:
    - closed
    - dbId
    - level
    - message
    - timestamp
    - userId
    properties:
      userId:
        type: string
        example: cd88fba9-277b-4cc2-a99e-7a9f0926acd5
      timestamp:
        type: number
        example: 1.6676703E7
      message:
        type: string
        example: Your deposit of $54.23 has been credited
      closed:
        type: boolean
        example: false
      level:
        type: string
        example: INFO
      dbId:
        type: string
        example: 7a9f0926acd5
  IAppNotificationClosed:
    type: object
    required:
    - message
    properties:
      message:
        type: string
        example: Notification 7a9f0926acd5 closed
  IDwollaFundingSourceBody__embedded:
    type: object
    properties:
      funding-sources:
        type: array
        items:
          $ref: '#/definitions/IDwollaFundingSource'
